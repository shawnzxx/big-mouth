service: big-mouth # NOTE: update this with your service name

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:scan
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants
    - Effect: Allow
      Action: execute-api:Invoke
      Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants
    - Effect: Allow
      Action: kinesis:PutRecord
      Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    - Effect: Allow
      Action: sns:Publish
      Resource: 
        - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
        - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification


functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
    environment:
      restaurants_api: https://d8rqdddzxj.execute-api.us-east-1.amazonaws.com/dev/restaurants
      orders_api: https://d8rqdddzxj.execute-api.us-east-1.amazonaws.com/dev/orders
      cognito_user_pool_id: us-east-1_BXJNx0zbs
      cognito_client_id: 4bhgqbem4f6p8leiq4fmnals1m

  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      defaultTotalRestaurants: 8
      restaurants_table: restaurants

  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_BXJNx0zbs
    environment:
      restaurants_table: restaurants
  
  place-order:
    handler: functions/place-order.handler
    events:
      - http:
          path: /orders
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_BXJNx0zbs
    environment:
      order_events_stream: order-events
  
  notify-restaurant:
    handler: functions/notify-restaurant.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
  
  accept-order:
    handler: functions/accept-order.handler
    events:
      - http:
          path: /orders/accept
          method: post
    environment:
      order_events_stream: order-events
  
  notify-user:
    handler: functions/notify-user.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events
      user_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification
  
resources:
  Resources:
    restaurantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: restaurants
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    orderEventsStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: order-events
        ShardCount: 1
    restaurantNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: restaurant-notification
        TopicName: restaurant-notification
    userNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: user-notification
        TopicName: user-notification